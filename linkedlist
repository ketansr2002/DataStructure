//creation of a linked list , insertion and delection of node at various positions
#include<bits/stdc++.h>
using namespace std;

//declaring a class node which is individual node of a linked list
//constructor is also made to intialise the node , destructor is optional
class node{
    public:
    int val;
    node* next;

    node(int data){
        val=data;
        next=NULL;
    }

};

void insertAtTail(node* &head,int val){

    //instance of a node is created which is later connnected to the link list
    node* n=new node(val);
    if(head==NULL){
        head=n;
        return;
    }
    node* temp=head;
    while(temp->next !=NULL){
        temp=temp->next;
    }
    temp->next=n;
}

void insertAtHead(node* &head,int val){
    node* n=new node(val);
    n->next=head;
    head=n;
}

void insertInBetween(node* &head,int idx,int val){
    node* n=new node(val);
    node* temp=head;

    while(idx--){
        temp=temp->next;
    }
    n->next=temp->next;
    temp->next=n;
}

void deleteFromHead(node* &head){
    node* temp=head;
    head=head->next;
    temp->next=NULL;
    
    delete temp;
}

void deleteFromTail(node* &head){
    node* temp=head;

    while(temp->next->next != NULL){
        temp=temp->next;
    }
    node* deletePtr=temp->next;
    temp->next=NULL;
    delete deletePtr;
}

void deleteFromBetween(node* &head,int idx){
    node* temp=head;
    node* deletePtr=NULL;
    //we will access the node previous to the node that needs to be deleted
    idx--;

    while(idx--){
        temp=temp->next;
    }

    deletePtr=temp->next;
    temp->next=deletePtr->next;
    delete deletePtr;


}
void print(node* head){
    while(head != NULL){
        cout<<head->val<<"->";
        head=head->next;
    }
}


int main(){
    node* head=NULL;
    insertAtTail(head,1);
    insertAtTail(head,2);
    insertAtTail(head,3);
    insertAtTail(head,4);
    insertAtTail(head,5);
    insertInBetween(head,2,6);

    print(head);
    deleteFromBetween(head,3);
    deleteFromHead(head);
    deleteFromTail(head);   

}




//various questions on linked list
